  Dir.cpp
d:\c++\c++code\0211\0211\dir.cpp(102): warning C4018: “<”: 有符号/无符号不匹配
c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(240): error C2672: “std::invoke”: 未找到匹配的重载函数
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(249): note: 参见对正在编译的函数 模板 实例化“void std::_LaunchPad<_Target>::_Execute<0,1,2,3,4>(std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>,int> &,std::integer_sequence<unsigned int,0,1,2,3,4>)”的引用
          with
          [
              _Target=std::unique_ptr<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>,std::default_delete<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>>>,
              _Ty=std::string
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(247): note: 参见对正在编译的函数 模板 实例化“void std::_LaunchPad<_Target>::_Execute<0,1,2,3,4>(std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>,int> &,std::integer_sequence<unsigned int,0,1,2,3,4>)”的引用
          with
          [
              _Target=std::unique_ptr<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>,std::default_delete<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>>>,
              _Ty=std::string
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(244): note: 编译类 模板 成员函数“void std::_LaunchPad<_Target>::_Run(std::_LaunchPad<_Target> *) noexcept”时
          with
          [
              _Target=std::unique_ptr<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>,std::default_delete<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(232): note: 参见对正在编译的函数 模板 实例化“void std::_LaunchPad<_Target>::_Run(std::_LaunchPad<_Target> *) noexcept”的引用
          with
          [
              _Target=std::unique_ptr<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>,std::default_delete<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(259): note: 参见对正在编译的类 模板 实例化“std::_LaunchPad<_Target>”的引用
          with
          [
              _Target=std::unique_ptr<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>,std::default_delete<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thread(50): note: 参见对正在编译的函数 模板 实例化“void std::_Launch<std::unique_ptr<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>,int>,std::default_delete<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>,int>>>>(_Thrd_t *,_Target &&)”的引用
          with
          [
              _Ty=std::string,
              _Target=std::unique_ptr<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>,std::default_delete<std::tuple<int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int),Dir *,std::basic_string<char,std::char_traits<char>,std::allocator<char>>,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>>,int>>>
          ]
  d:\c++\c++code\0211\0211\dir.cpp(19): note: 参见对正在编译的函数 模板 实例化“std::thread::thread<int(__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,int),Dir*const ,const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>&,int,void>(_Fn &&,Dir *const &&,const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &,std::vector<std::vector<_Ty,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,int &&)”的引用
          with
          [
              _Ty=std::string,
              _Fn=int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<std::string>>,std::allocator<std::vector<std::string,std::allocator<std::string>>>> &,int)
          ]
c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(240): error C2893: 未能使函数模板“unknown-type std::invoke(_Callable &&,_Types &&...)”专用化
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(240): note: 用下列模板参数:
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(240): note: “_Callable=int (__cdecl *)(const char *,std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>> &,int)”
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\thr\xthread(240): note: “_Types={Dir *, std::basic_string<char,std::char_traits<char>,std::allocator<char>>, std::vector<std::vector<std::string,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>, int}”
